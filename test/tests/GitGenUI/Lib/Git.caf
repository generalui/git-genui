import &StandardImport
import Git

suite:
  getGitCommitMessage: ->
    ##
      <type>(<scope>): [(Starts|Finishes) #TRACKER_STORY_ID] <message>
      <BLANK LINE>
      <body>
      <BLANK LINE>
      <footer>
      <BLANK LINE>
      <BLANK LINE>
      Co-authored-by: name <name@example.com>
      Co-authored-by: another-name <another-name@example.com>

    exhibitA =
      type:      :feat
      story:           '[171339446] (started) Update "About Page" with collage, move Kayak photo to Careers.'
      message:         ""
      wantLongMessage: true

    test "type and message" ->
      assert.eq
        getGitCommitMessage
          type: :feat
          message:    :hi
        "" feat: hi

    test "story: id: 123" ->
      assert.eq
        getGitCommitMessage
          type:       :feat
          message:    :hi
          story: id: 123
        "" feat: [#123] hi

    test "story: id: 123 status: :unstarted" ->
      assert.eq
        getGitCommitMessage
          type:       :feat
          message:    :hi
          story: id: 123 status: :unstarted
          storyState: :started
        "" feat: [#123] (started) hi

    test :storyFinished ->
      assert.eq
        getGitCommitMessage
          type:       :feat
          message:    :hi
          story: id:  123, status: :started
          storyState: :finished
        "" feat: [#123] (finished) hi

    test "coauthors" ->
      assert.eq
        getGitCommitMessage
          type:       :feat
          message:    :hi
          coauthors:  [] :franky
        """
          feat: hi


          Coauthored-by: franky
