import &StandardImport, &colors

applyActions = (input, actionList, actions, options) ->
  resultPromise = Promise.then -> input
  each actionName, index from actionList
    resultPromise =
      resultPromise
      .then (previousResult) ->
        Promise.then ->
          unless action = actions[actionName]
            throw new Error "No action named #{actionName}"

          log grey "apply action: #{actionName}" unless options?.quiet
          action previousResult

        .then (result) ->
          info =
            succeeded:  compactFlattenAll result.actionsApplied?.succeeded, actionName
            failed:     compactFlattenAll result.actionsApplied?.failed,    actionName
          merge
            result
            actionsApplied: object v in info when v.length > 0

        .catch (error) ->
          unless options?.quiet
            log.error {}
              message:
                """
                  Error in action #{actionName} (order = #{index} / #{actionList.length})

              error

          previousResult

  resultPromise
