import &ArtStandardLib

(argv) ->
  log 'Hi, welcome to Node Pizza'

  questions =
    # {}
    #   type: 'confirm'
    #   name: 'toBeDelivered'
    #   message: 'Is this for delivery?'
    #   default: false

    # {}
    #   type: 'input'
    #   name: 'phone'
    #   message: "What's your phone number?"
    #   validate: (value) ->
    #     ///i ^([01]{1})?[-.\s]?\(?(\d{3})\)?[-.\s]?(\d{3})[-.\s]?(\d{4})\s?((?:#|ext\.?\s?|x\.?\s?){1}(?:\d+)?)?$
    #     .test value
    #     || 'Please enter a valid phone number'

    {}
      type: :expand
      name: :versionType
      message: "" Semantic versioning: Is your change...
      choices:
        key: :m value: :major name: "" Major
        key: :n value: :minor name: "" miNor
        key: :p value: :patch name: "" Patch
      filter: (val) -> val.toLowerCase()

    {}
      type:     :list
      name:     :story
      message:  "" What story does this commit advance?
      choices:
        value: :#abc123 name: "" [#abc123] Jack and the beanstalk
        value: :#abc124 name: "" [#abc124] Hansel and Grettle
        value: :#abc125 name: "" [#abc125] Mother Goose

    {}
      type:     :list
      name:     :pair
      message:  "" Who are you pairing with?
      default:  null
      choices:
        value: null       name: "" (no-one)
        value: :jon       name: "" Jon
        value: :thatcher  name: "" Thatchers

    # {}
    #   type:     'input'
    #   name:     'quantity'
    #   message:  'How many do you need?',
    #   validate: (value) ->
    #     !isNaN(parseFloat(value))
    #     || 'Please enter a number'

    #   filter: Number

    # {}
    #   type:     :expand
    #   name:     :toppings
    #   message:  "" What about the toppings?
    #   choices:
    #     key: :p value: :PepperoniCheese name: "" Pepperoni and cheese
    #     key: :a value: :alldressed      name: "" All dressed
    #     key: :w value: :hawaiian        name: "" Hawaiian

    # {}
    #   type:     'rawlist'
    #   name:     'beverage'
    #   message:  'You also get a free 2L beverage'
    #   choices:  :Pepsi :7up :Coke

    # {}
    #   type:     'input'
    #   name:     'comments'
    #   message:  'Any comments on your purchase experience?'
    #   default:  'Nope, all good!'

    # {}
    #   type:     'list'
    #   name:     'prize'
    #   message:  'For leaving a comment, you get a freebie'
    #   choices:  :cake :fries
    #   when: (answers) -> answers.comments != 'Nope, all good!'

  &inquirer
  .prompt questions
  .then (answers) ->
    log '\nOrder receipt:'
    log {} answers
