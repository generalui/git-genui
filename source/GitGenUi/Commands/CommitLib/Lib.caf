import &StandardImport, &UserConfig

{}
  updateStateWithPrompt = (statePropName, promptF) ->
    (state) ->
      Promise.then -> promptF state
      .then (value) ->
        if value == undefined then state[statePropName]
        else value
      .then (value) -> merge state, [statePropName]: value

  saveState = (state) ->
    userConfig.saveCommitOptionsForProject {message, type, coauthors, story} = state if state
    state

  validateStory = (state) ->
    state extract story, storyId, stories
    if storyId ?= story?.id
      unless story = find story in stories when story.id == storyId
        log.warn merge {}
          message: "" Invalid story or storyId
          story
          storyId

      state.story = story

    state
