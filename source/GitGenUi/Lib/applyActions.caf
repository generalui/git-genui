import &StandardImport, &Style

applyActions = (input, actionList, actions, options) ->
  resultPromise = Promise.then -> input
  actionsApplied =
    succeeded: []
    failed: []
  each actionName, index from actionList
    resultPromise =
      resultPromise
      .then (previousResult) ->
        Promise.then ->
          unless action = actions[actionName]
            throw new Error "No action named #{actionName}"

          log grey "apply action: #{actionName}" unless options?.quiet
          action previousResult

        .tap      -> actionsApplied.succeeded.push actionName
        .tapCatch -> actionsApplied.failed.push actionName

        .catch (error) ->
          unless options?.quiet
            log.error {}
              message:
                """
                  Error in action #{actionName} (order = #{index + 1} / #{actionList.length})

              error

          previousResult

  resultPromise.then (result) ->
    {}
      result
      actionsApplied: object v from actionsApplied when v.length > 0
